@page "/reserveringen"
@attribute [Authorize(Roles = "Lid")]

@using Kbs.Business.Reservation
@using Kbs.Business.Boat
@using Kbs.Business.User
@inject IReservationRepository ReservationRepository
@inject SessionManagerAuthenticationStateProvider SessionManagerAuthenticationStateProvider
@inject IBoatRepository BoatRepository
@inject IUserRepository UserRepository

<PageTitle>Reserveringen</PageTitle>

<div class="row">
    <h1 class="col-4">Reserveringen</h1>
    <div class="col-4">
        <a href="/reserveringen/aanmaken" class="btn btn-primary">Reservering aanmaken</a>
    </div>
</div>


<table class="table">
    <thead>
    <tr>
        <th>Starttijd</th>
        <th>Eindtijd</th>
        <th>Boot</th>
        <th>Gebruiker</th>
        <th>Status</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var reservation in _reservations)
    {
        var boat = BoatRepository.GetById(reservation.BoatId);
        var user = UserRepository.GetById(reservation.UserId);
        <tr>
            <td>
                <a href="reserveringen/@reservation.ReservationId"> @reservation.StartTime.ToDutchString(true)</a>
            </td>
            <td>@reservation.EndTime.ToDutchString(true)</td>
            <td>
                <a href="/boten/@boat.BoatId">
                    @boat.Name
                </a>
            </td>

            <td>
                <a href="/gebruikers/@user.UserId">
                    @(user.Name ?? user.Email)
                </a>
            </td>
            <td>@reservation.Status.ToDutchString()</td>
        </tr>
    }
    </tbody>
</table>

@code {
    private List<ReservationEntity> _reservations = new();

    protected override void OnInitialized()
    {
        var userId = SessionManagerAuthenticationStateProvider.Session.User.UserId;
        _reservations = ReservationRepository.GetByUserId(userId);
    }

}