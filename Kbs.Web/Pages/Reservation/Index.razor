@page "/reserveringen"
@attribute [Authorize(Roles = "Lid")]

@using Kbs.Business.Reservation
@using Kbs.Business.Boat
@inject IReservationRepository ReservationRepository
@inject SessionManagerAuthenticationStateProvider SessionManagerAuthenticationStateProvider
@inject IBoatRepository BoatRepository

<PageTitle>Reserveringen</PageTitle>
<h1>Reserveringen</h1>

<div class="row">
    <div class="col-4">
        @{
            var validator = new ReservationValidator();
        }
        @if (SessionManagerAuthenticationStateProvider.Session.User.IsGameCommissioner() || !validator.IsReservationLimitReached(ReservationRepository.CountByUser(SessionManagerAuthenticationStateProvider.Session.User.UserId)))
        {
            <a href="/reserveringen/aanmaken" class="btn btn-primary">Reservering aanmaken</a>
        }
        else
        {
            <button class="btn btn-danger" disabled>Reserveringslimiet bereikt</button>
        }
    </div>
</div>

<div class="row d-flex justify-content-start">
    @foreach (var reservation in _reservations)
    {
        var boat = BoatRepository.GetById(reservation.BoatId);
        <Card Title="@reservation.StartTime.ToDutchString()" SubTitle="@(reservation.StartTime.TimeOfDay.ToString(@"hh\:mm") + " - " + reservation.EndTime.TimeOfDay.ToString(@"hh\:mm"))">
            <div class="row">
                <span class="col-12">@boat.Name</span>
                @if (reservation.Status == ReservationStatus.Active)
                {
                    <span class="col-12 text-muted">@reservation.Status.ToDutchString()</span>
                }
                else
                {
                    <span class="col-12 text-danger">@reservation.Status.ToDutchString()</span>
                }
                <a class="col-12 btn btn-primary" href="/reserveringen/@reservation.ReservationId">Details</a>
            </div>
            
        </Card>
    }
</div>

@code {
    private List<ReservationEntity> _reservations = new();

    protected override void OnInitialized()
    {
        var userId = SessionManagerAuthenticationStateProvider.Session.User.UserId;
        _reservations = ReservationRepository.GetByUserId(userId);
    }

}